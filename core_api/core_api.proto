syntax = "proto3";

package core_api;

option go_package = "core_api";

import "core_api/common.proto";
import "basic/http.proto";
import "basic/re.proto";

service CoreApi {
  rpc Completions(CompletionsReq) returns (stream SSEEvent){
    option(http.post) = "/v1/completions";
  }
  rpc CreateConversation(CreateConversationReq) returns (CreateConversationResp) {
    option(http.post) = "/conversation/create";
  }
  rpc ListConversation(ListConversationReq) returns (ListConversationResp) {
    option(http.post) = "/conversation/list";
  }
  rpc GetConversation(GetConversationReq) returns (GetConversationResp) {
    option(http.post) = "/conversation/get";
  }
  rpc RenameConversation(RenameConversationReq) returns (RenameConversationResp) {
    option(http.post) = "/conversation/rename";
  }
  rpc DeleteConversation(DeleteConversationReq) returns (DeleteConversationResp) {
    option(http.post) = "/conversation/delete";
  }
  rpc SearchConversation(SearchConversationReq) returns (SearchConversationResp) {
    option(http.post) = "/conversation/search";
  }
  rpc ListAgents(ListAgentsReq) returns (ListAgentsResp) {
    option(http.post) = "/agents/list";
  }
  rpc Feedback(FeedbackReq) returns (basic.Response) {
    option(http.post) = "/feedback";
  }
}