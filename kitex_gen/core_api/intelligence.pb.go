// Code generated by Kitex v0.15.1. DO NOT EDIT.

package core_api

import (
	"github.com/xh-polaris/innospark-idl/kitex_gen/basic"

	"github.com/cloudwego/prutal"
)

type Intelligence struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconUrl     string `protobuf:"bytes,5,opt,name=iconUrl" json:"iconUrl,omitempty"`
	CreateTime  string `protobuf:"bytes,6,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime  string `protobuf:"bytes,7,opt,name=updateTime" json:"updateTime,omitempty"`
	PublishTime string `protobuf:"bytes,8,opt,name=publishTime" json:"publishTime,omitempty"`
}

func (x *Intelligence) Reset() { *x = Intelligence{} }

func (x *Intelligence) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *Intelligence) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *Intelligence) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Intelligence) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Intelligence) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Intelligence) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Intelligence) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Intelligence) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Intelligence) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *Intelligence) GetPublishTime() string {
	if x != nil {
		return x.PublishTime
	}
	return ""
}

type IntelligenceInfo struct {
	BotId                string          `protobuf:"bytes,1,opt,name=botId" json:"botId,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description          string          `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	IconUrl              string          `protobuf:"bytes,4,opt,name=iconUrl" json:"iconUrl,omitempty"`
	CreateTime           int64           `protobuf:"varint,5,opt,name=createTime" json:"createTime,omitempty"`
	UpdateTime           int64           `protobuf:"varint,6,opt,name=updateTime" json:"updateTime,omitempty"`
	Version              string          `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	PromptInfo           *PromptInfo     `protobuf:"bytes,8,opt,name=promptInfo" json:"promptInfo,omitempty"`
	OnboardingInfo       *OnboardingInfo `protobuf:"bytes,9,opt,name=onboardingInfo" json:"onboardingInfo,omitempty"`
	BotMode              int32           `protobuf:"varint,10,opt,name=botMode" json:"botMode,omitempty"`
	ModelInfo            *ModelInfo      `protobuf:"bytes,11,opt,name=modelInfo" json:"modelInfo,omitempty"`
	PluginInfoList       []*PluginInfo   `protobuf:"bytes,12,rep,name=pluginInfoList" json:"pluginInfoList,omitempty"`
	WorkflowInfoList     []*WorkflowInfo `protobuf:"bytes,13,rep,name=workflowInfoList" json:"workflowInfoList,omitempty"`
	ShortcutCommands     string          `protobuf:"bytes,14,opt,name=shortcutCommands" json:"shortcutCommands,omitempty"`
	DefaultUserInputType string          `protobuf:"bytes,15,opt,name=defaultUserInputType" json:"defaultUserInputType,omitempty"`
	SuggestReplyInfo     string          `protobuf:"bytes,16,opt,name=suggestReplyInfo" json:"suggestReplyInfo,omitempty"`
	BackgroundImageInfo  string          `protobuf:"bytes,17,opt,name=backgroundImageInfo" json:"backgroundImageInfo,omitempty"`
	Variables            string          `protobuf:"bytes,18,opt,name=variables" json:"variables,omitempty"`
	Type                 string          `protobuf:"bytes,19,opt,name=type" json:"type,omitempty"`
}

func (x *IntelligenceInfo) Reset() { *x = IntelligenceInfo{} }

func (x *IntelligenceInfo) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *IntelligenceInfo) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *IntelligenceInfo) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *IntelligenceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IntelligenceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IntelligenceInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *IntelligenceInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *IntelligenceInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *IntelligenceInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *IntelligenceInfo) GetPromptInfo() *PromptInfo {
	if x != nil {
		return x.PromptInfo
	}
	return nil
}

func (x *IntelligenceInfo) GetOnboardingInfo() *OnboardingInfo {
	if x != nil {
		return x.OnboardingInfo
	}
	return nil
}

func (x *IntelligenceInfo) GetBotMode() int32 {
	if x != nil {
		return x.BotMode
	}
	return 0
}

func (x *IntelligenceInfo) GetModelInfo() *ModelInfo {
	if x != nil {
		return x.ModelInfo
	}
	return nil
}

func (x *IntelligenceInfo) GetPluginInfoList() []*PluginInfo {
	if x != nil {
		return x.PluginInfoList
	}
	return nil
}

func (x *IntelligenceInfo) GetWorkflowInfoList() []*WorkflowInfo {
	if x != nil {
		return x.WorkflowInfoList
	}
	return nil
}

func (x *IntelligenceInfo) GetShortcutCommands() string {
	if x != nil {
		return x.ShortcutCommands
	}
	return ""
}

func (x *IntelligenceInfo) GetDefaultUserInputType() string {
	if x != nil {
		return x.DefaultUserInputType
	}
	return ""
}

func (x *IntelligenceInfo) GetSuggestReplyInfo() string {
	if x != nil {
		return x.SuggestReplyInfo
	}
	return ""
}

func (x *IntelligenceInfo) GetBackgroundImageInfo() string {
	if x != nil {
		return x.BackgroundImageInfo
	}
	return ""
}

func (x *IntelligenceInfo) GetVariables() string {
	if x != nil {
		return x.Variables
	}
	return ""
}

func (x *IntelligenceInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PromptInfo struct {
	Prompt string `protobuf:"bytes,1,opt,name=prompt" json:"prompt,omitempty"`
}

func (x *PromptInfo) Reset() { *x = PromptInfo{} }

func (x *PromptInfo) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *PromptInfo) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *PromptInfo) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

type OnboardingInfo struct {
	Prologue                   string `protobuf:"bytes,1,opt,name=prologue" json:"prologue,omitempty"`
	SuggestedQuestionsShowMode int32  `protobuf:"varint,2,opt,name=suggestedQuestionsShowMode" json:"suggestedQuestionsShowMode,omitempty"`
}

func (x *OnboardingInfo) Reset() { *x = OnboardingInfo{} }

func (x *OnboardingInfo) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *OnboardingInfo) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *OnboardingInfo) GetPrologue() string {
	if x != nil {
		return x.Prologue
	}
	return ""
}

func (x *OnboardingInfo) GetSuggestedQuestionsShowMode() int32 {
	if x != nil {
		return x.SuggestedQuestionsShowMode
	}
	return 0
}

type ModelInfo struct {
	ModelId           string             `protobuf:"bytes,1,opt,name=modelId" json:"modelId,omitempty"`
	Temperature       float32            `protobuf:"fixed32,2,opt,name=temperature" json:"temperature,omitempty"`
	MaxTokens         int32              `protobuf:"varint,3,opt,name=maxTokens" json:"maxTokens,omitempty"`
	TopP              float32            `protobuf:"fixed32,4,opt,name=topP" json:"topP,omitempty"`
	ShortMemoryPolicy *ShortMemoryPolicy `protobuf:"bytes,5,opt,name=shortMemoryPolicy" json:"shortMemoryPolicy,omitempty"`
	ModelStyle        int32              `protobuf:"varint,6,opt,name=modelStyle" json:"modelStyle,omitempty"`
}

func (x *ModelInfo) Reset() { *x = ModelInfo{} }

func (x *ModelInfo) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *ModelInfo) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *ModelInfo) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *ModelInfo) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ModelInfo) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *ModelInfo) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ModelInfo) GetShortMemoryPolicy() *ShortMemoryPolicy {
	if x != nil {
		return x.ShortMemoryPolicy
	}
	return nil
}

func (x *ModelInfo) GetModelStyle() int32 {
	if x != nil {
		return x.ModelStyle
	}
	return 0
}

type ShortMemoryPolicy struct {
	HistoryRound int32 `protobuf:"varint,1,opt,name=historyRound" json:"historyRound,omitempty"`
}

func (x *ShortMemoryPolicy) Reset() { *x = ShortMemoryPolicy{} }

func (x *ShortMemoryPolicy) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *ShortMemoryPolicy) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *ShortMemoryPolicy) GetHistoryRound() int32 {
	if x != nil {
		return x.HistoryRound
	}
	return 0
}

type PluginInfo struct {
}

func (x *PluginInfo) Reset() { *x = PluginInfo{} }

func (x *PluginInfo) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *PluginInfo) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

type WorkflowInfo struct {
}

func (x *WorkflowInfo) Reset() { *x = WorkflowInfo{} }

func (x *WorkflowInfo) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *WorkflowInfo) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

type ListIntelligenceReq struct {
	Page *basic.Page `protobuf:"bytes,1,opt,name=page" json:"page,omitempty"`
}

func (x *ListIntelligenceReq) Reset() { *x = ListIntelligenceReq{} }

func (x *ListIntelligenceReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *ListIntelligenceReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *ListIntelligenceReq) GetPage() *basic.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListIntelligenceResp struct {
	Resp          *basic.Response `protobuf:"bytes,1,opt,name=resp" json:"resp,omitempty"`
	Intelligences []*Intelligence `protobuf:"bytes,2,rep,name=intelligences" json:"intelligences,omitempty"`
	HasMore       bool            `protobuf:"varint,3,opt,name=hasMore" json:"hasMore,omitempty"`
}

func (x *ListIntelligenceResp) Reset() { *x = ListIntelligenceResp{} }

func (x *ListIntelligenceResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *ListIntelligenceResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *ListIntelligenceResp) GetResp() *basic.Response {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *ListIntelligenceResp) GetIntelligences() []*Intelligence {
	if x != nil {
		return x.Intelligences
	}
	return nil
}

func (x *ListIntelligenceResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type GetIntelligenceReq struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *GetIntelligenceReq) Reset() { *x = GetIntelligenceReq{} }

func (x *GetIntelligenceReq) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *GetIntelligenceReq) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *GetIntelligenceReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetIntelligenceResp struct {
	Resp *basic.Response   `protobuf:"bytes,1,opt,name=resp" json:"resp,omitempty"`
	Info *IntelligenceInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (x *GetIntelligenceResp) Reset() { *x = GetIntelligenceResp{} }

func (x *GetIntelligenceResp) Marshal(in []byte) ([]byte, error) { return prutal.MarshalAppend(in, x) }

func (x *GetIntelligenceResp) Unmarshal(in []byte) error { return prutal.Unmarshal(in, x) }

func (x *GetIntelligenceResp) GetResp() *basic.Response {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *GetIntelligenceResp) GetInfo() *IntelligenceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}
